stages:
  - container
  - lint
  - test
  - extras
  - deploy

variables:
  FDO_UPSTREAM_REPO: 'pipewire/pipewire-rs'
  # change to build against a different tag/commit/branch of pipewire
  PIPEWIRE_HEAD: '0.3.23'

# ci-templates as of Jun 24th 2020
.templates_sha: &templates_sha 9a98f16486904b6406243d6e1407e4dfd71b6263

include:
  - project: 'freedesktop/ci-templates'
    ref: *templates_sha
    file: '/templates/fedora.yml'

.fedora:
  variables:
    # Update this tag when you want to trigger a rebuild
    FDO_DISTRIBUTION_TAG: '2021-03-19.0'
    FDO_DISTRIBUTION_VERSION: '33'
    # findutils: used by the .build script below
    # dbus-devel: required by pipewire
    # dbus-daemon: required by GDBus unit tests
    # wget: required by install-rust.sh
    # openssl-devel: required to build cargo tools
    # make: required to build cargo tools
    FDO_DISTRIBUTION_PACKAGES: >-
      findutils
      gcc
      gcc-c++
      llvm-devel
      clang-devel
      git
      meson
      python3-pip
      python3-devel
      glib2-devel
      gobject-introspection-devel
      dbus-devel
      dbus-daemon
      wget
      openssl-devel
      make
      perl-FindBin
    FDO_DISTRIBUTION_EXEC: >-
      pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates &&
      bash ci/install-rust.sh stable
  before_script:
    - source ./ci/env.sh
    - mkdir .cargo && echo -e "[net]\ngit-fetch-with-cli = true" > .cargo/config

.build:
  before_script:
    - source ./ci/env.sh
    # setup the environment
    - export BUILD_ID="$CI_JOB_NAME"
    - export PREFIX="$PWD/prefix-$BUILD_ID"
    - export PW_BUILD_DIR="$PWD/build-pipewire-$BUILD_ID"
    # Build pipewire
    # Fedora also ships that, but without the test plugins that we need...
    - git clone --depth=1 --branch="$PIPEWIRE_HEAD"
        https://gitlab.freedesktop.org/pipewire/pipewire.git pipewire.git
    - meson "$PW_BUILD_DIR" pipewire.git --prefix="$PREFIX"
        -Dpipewire-alsa=false -Dpipewire-pulseaudio=false -Dpipewire-jack=false
        -Dalsa=false -Dv4l2=false -Djack=false -Dbluez5=false -Dvulkan=false
        -Dgstreamer=false -Dsystemd=false
        -Ddocs=false -Dman=false -Dexamples=false -Dpw-cat=false
        -Dvideotestsrc=true -Daudiotestsrc=true -Dtest=true
    - ninja -C "$PW_BUILD_DIR" install
    # misc environment only for wireplumber
    - export WP_BUILD_DIR="$PWD/build-wireplumber-$BUILD_ID"
    - export XDG_RUNTIME_DIR="$(mktemp -p $PWD -d xdg-runtime-XXXXXX)"
    - export PKG_CONFIG_PATH="$(dirname $(find "$PREFIX" -name 'libpipewire-*.pc')):$PKG_CONFIG_PATH"
    - export LD_LIBRARY_PATH="$(dirname $(find "$PREFIX" -name 'libpipewire-*.so.0')):$LD_LIBRARY_PATH"
  after_script:
    - rm -rf target

container_fedora:
  extends:
    - .fedora
    - .fdo.container-build@fedora
  stage: container

rustfmt:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
  stage: lint
  script:
    - cargo fmt --version
    - cargo fmt -- --color=always --check

check commits:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
  stage: lint
  script:
    - ci-fairy check-commits --textwidth 0 --no-signed-off-by

test-stable:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: test
  script:
    - rustc --version
    - cargo build --all-targets
    - cargo test --color=always

miri:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: test
  script:
    - rustup default $(cat /nightly-version)
    - rustc --version
    # miri does not support foreign function calls so we can't use it with code calling ffi.
    # Run it only on libspa as this crate is mostly a pure Rust re-implementation.
    - cargo miri test --package libspa

rustdoc:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: extras
  variables:
    RUSTDOCFLAGS: '-Dwarnings'
  script:
    - rustdoc --version
    - cargo doc --no-deps

clippy:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: extras
  script:
    - cargo clippy --version
    - cargo clippy --color=always --all-targets -- -D warnings

deny:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
  stage: extras
  only:
    - schedule
    - release
  script:
    - cargo deny check

outdated:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
  stage: extras
  only:
    - schedule
    - release
  script:
    - cargo outdated --root-deps-only --exit-code 1 -v

pages:
  extends:
    - .fedora
    - .fdo.distribution-image@fedora
    - .build
  stage: 'deploy'
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $PIPELINE_BRANCH != $CI_DEFAULT_BRANCH
      when: never
  script:
    - cargo doc --color=always
    - mv target/doc public/
  artifacts:
    paths:
      - 'public'