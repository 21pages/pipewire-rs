stages:
  - container
  - lint
  - test
  - extras
  - deploy

variables:
  FDO_UPSTREAM_REPO: 'pipewire/pipewire-rs'

# ci-templates as of Jan 11th 2022
.templates_sha: &templates_sha 34039cd573a2df832d465bc9e4c5f543571f5241

include:
  - project: 'freedesktop/ci-templates'
    ref: *templates_sha
    file: '/templates/fedora.yml'

.fedora:
  variables:
    # Update this tag when you want to trigger a rebuild
    BASE_TAG: '2023-07-15.0'
    FDO_DISTRIBUTION_VERSION: '38'
    # wget: required by install-rust.sh
    # openssl-devel, perl-FindBin: required to build cargo tools
    # make: required to build cargo tools
    # clang-devel: required by rust-bindgen
    FDO_DISTRIBUTION_PACKAGES: >-
      pipewire-devel
      wget
      openssl-devel
      perl-FindBin
      make
      clang-devel
      git
      python3-pip
      python3-setuptools
    FDO_DISTRIBUTION_EXEC: >-
      pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates &&
      bash ci/install-rust.sh stable
  before_script:
    - source ./ci/env.sh
    - mkdir .cargo && echo -e "[net]\ngit-fetch-with-cli = true" > .cargo/config

.fedora-x86:
  extends:
    - .fedora
  variables:
    FDO_DISTRIBUTION_TAG: 'x86_64-$BASE_TAG'

.fedora-arm:
  extends:
    - .fedora
  variables:
    FDO_DISTRIBUTION_TAG: 'aarch64-$BASE_TAG'

.build:
  before_script:
    - source ./ci/env.sh

container_fedora-x86:
  extends:
    - .fedora-x86
    - .fdo.container-build@fedora
  stage: container

container_fedora-arm:
  extends:
    - .fedora-arm
    - .fdo.container-build@fedora
  stage: container

rustfmt:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
  stage: lint
  script:
    - cargo fmt --version
    - cargo fmt -- --color=always --check

.test-template: &test-definition
  script:
    - rustc --version
    - cargo build --color=always --all-targets
    - cargo test --color=always

test-stable-x86:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
    - .build
  <<: *test-definition
  stage: test

test-stable-arm:
  extends:
    - .fedora-arm
    - .fdo.distribution-image@fedora
    - .build
  <<: *test-definition
  stage: test

miri:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
    - .build
  stage: test
  script:
    - rustup default $(cat /nightly-version)
    - rustc --version
    # miri does not support foreign function calls so we can't use it with code calling ffi.
    # Run it only on libspa as this crate is mostly a pure Rust re-implementation.
    - cargo miri test --package libspa

rustdoc:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
    - .build
  stage: extras
  variables:
    RUSTDOCFLAGS: '-Dwarnings'
  script:
    - rustdoc --version
    - cargo doc -p pipewire --no-deps
    - cargo doc -p libspa --no-deps

clippy:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
    - .build
  stage: extras
  script:
    - cargo clippy --version
    - cargo clippy --color=always --all-targets -- -D warnings

deny:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
  stage: extras
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_BRANCH == "release"'
  script:
    - cargo deny check

outdated:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
  stage: extras
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_BRANCH == "release"'
  script:
    - cargo outdated --root-deps-only --exit-code 1 -v

pages:
  extends:
    - .fedora-x86
    - .fdo.distribution-image@fedora
    - .build
  stage: 'deploy'
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $PIPELINE_BRANCH != $CI_DEFAULT_BRANCH
      when: never
  script:
    - cargo doc --color=always
    - mv target/doc public/
  artifacts:
    paths:
      - 'public'